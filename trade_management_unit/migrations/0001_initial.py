# Generated by Django 4.0.7 on 2023-02-13 12:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.CharField(default='', max_length=64, primary_key=True, serialize=False)),
                ('nse_symbol', models.CharField(default='', max_length=128, unique=True)),
                ('name', models.CharField(default='', max_length=256)),
                ('series', models.CharField(default='EQ', max_length=10)),
                ('listing_date', models.DateField(blank=True, default='1990-01-01')),
                ('paid_up_value', models.IntegerField(blank=True, default=1)),
                ('market_lot', models.IntegerField(blank=True, default=1)),
                ('isin_number', models.CharField(default=None, max_length=64, unique=True)),
                ('face_value', models.IntegerField(default=10)),
            ],
            options={
                'db_table': 'stocks',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=225)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
