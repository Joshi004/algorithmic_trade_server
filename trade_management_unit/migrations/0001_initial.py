# Generated by Django 2.2 on 2023-03-09 14:55

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.CharField(auto_created=True, default='', max_length=64, primary_key=True, serialize=False)),
                ('nse_symbol', models.CharField(default='', max_length=128, unique=True)),
                ('name', models.CharField(default='', max_length=256)),
                ('series', models.CharField(default='EQ', max_length=10)),
                ('listing_date', models.DateField(blank=True, default='1990-01-01')),
                ('paid_up_value', models.IntegerField(blank=True, default=1)),
                ('market_lot', models.IntegerField(blank=True, default=1)),
                ('isin_number', models.CharField(default=None, max_length=64, unique=True)),
                ('face_value', models.IntegerField(default=10)),
            ],
            options={
                'db_table': 'stocks',
            },
        ),
        migrations.CreateModel(
            name='TradeSession',
            fields=[
                ('id', models.CharField(auto_created=True, default='', max_length=64, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField()),
                ('closed_at', models.DateTimeField()),
                ('net_profit', models.FloatField()),
                ('is_closed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'trade_sessions',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.CharField(auto_created=True, default='', max_length=64, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField()),
                ('closed_at', models.DateTimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade_management_unit.Stock', verbose_name='Ordered Stock')),
                ('trade_session', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='trade_management_unit.TradeSession', verbose_name='Trade Session')),
            ],
            options={
                'db_table': 'trades',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(auto_created=True, default='', max_length=64, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('rejected', 'rejected'), ('exicuted', 'exicuted')], default='exicuted', max_length=10)),
                ('startted_at', models.DateTimeField(default=datetime.datetime.now)),
                ('closed_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade_management_unit.Stock', verbose_name='stock_id')),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trade_management_unit.Trade', verbose_name='trade_id')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=225)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
